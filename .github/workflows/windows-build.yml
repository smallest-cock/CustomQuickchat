name: 🧱 Build DLL & release (Windows)

env:
  PLUGIN_NAME: CustomQuickchat
  PLUGIN_NAME_FORMATTED: Custom Quickchat
  TAG_NAME: ${{ github.event.inputs.tag || github.ref_name }}

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag (e.g. v1.0.1)"
        required: true
permissions:
  contents: write

jobs:
  check-changelog:
    name: Check changelog (main)
    runs-on: windows-latest
    outputs:
      changelog: ${{ steps.changelog.outputs.changelog }}
    steps:
      - name: 📥 Checkout repository (main)
        uses: actions/checkout@v4
        with:
          ref: main
          submodules: false

      - name: 📝 Extract changes from changelog
        id: changelog
        shell: bash
        run: |
          # Prefer manual input if available
          TAG="${{ github.event.inputs.tag || github.ref_name }}"

          # fail if tag not found in CHANGELOG.md
          if ! grep -q "^## $TAG" CHANGELOG.md; then
            echo "❌ Tag '$TAG' not found in CHANGELOG.md"
            exit 1
          fi

          echo "Using tag: $TAG"

          NOTES=$(awk "/^## $TAG/{flag=1; next} /^## /{flag=0} flag" CHANGELOG.md)

          echo "Extracted notes:"
          echo "$NOTES"

          {
            echo "changelog<<EOF"
            echo "$NOTES"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

  build:
    runs-on: windows-latest
    needs: check-changelog

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: 🍆 Initialize submodules
        run: ./scripts/init-submodules.bat

      - name: 🪟 Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: ⚙️ Set up CMake
        uses: jwlawson/actions-setup-cmake@v1

      - name: 🥷 Set up Ninja
        uses: seanmiddleditch/gha-setup-ninja@v3

      - name: 🧱 Configure project (CMake)
        run: cmake --preset stt-off

      - name: 🔨 Build project (CMake + Ninja)
        run: cmake --build --preset build

      - name: 🥵 Prepare release files
        shell: bash
        run: |
          7z a source.zip * -xr!README.md -xr!build -xr!plugins -xr!scripts -xr!docs -xr!assets -xr!.git
          mkdir -p dist temp/debug temp/installation_zip
          mv ./source.zip temp/debug
          cp ./plugins/*.dll temp/installation_zip
          mv ./scripts/install.bat temp/installation_zip
          mv ./plugins/*.dll temp/debug
          mv ./plugins/*.pdb temp/debug
          7z a "dist/${{ env.PLUGIN_NAME }}.zip" ./temp/installation_zip/*
          7z a dist/debug.zip ./temp/debug/*

      - name: ⬆️ Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-no-stt
          path: dist/*

  build-with-stt:
    runs-on: windows-latest
    needs: check-changelog
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: 🍆 Initialize submodules
        run: ./scripts/init-submodules.bat

      - name: 🪟 Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: ⚙️ Set up CMake
        uses: jwlawson/actions-setup-cmake@v1

      - name: 🥷 Set up Ninja
        uses: seanmiddleditch/gha-setup-ninja@v3

      - name: 🧱 Configure project (CMake)
        run: cmake --preset stt-on

      - name: 🔨 Build project (CMake + Ninja)
        run: cmake --build --preset build-stt

      - name: 🥵 Prepare release files
        shell: bash
        run: |
          7z a source.zip * -xr!README.md -xr!build -xr!plugins -xr!scripts -xr!docs -xr!assets -xr!.git
          mkdir -p dist temp/debug temp/installation_zip
          mv ./source.zip temp/debug
          cp ./plugins/*.dll temp/installation_zip
          mv ./scripts/install.bat temp/installation_zip
          mv ./plugins/*.dll temp/debug
          mv ./plugins/*.pdb temp/debug
          7z a "dist/${{ env.PLUGIN_NAME }}-STT-partial.zip" ./temp/installation_zip/*
          7z a dist/debug-STT.zip ./temp/debug/*

      - name: ⬆️ Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-with-stt
          path: dist/*

  bundle-python-script:
    runs-on: windows-latest
    needs: check-changelog
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: 🤡 Install required python modules
        run: |
          pip install pyinstaller
          cd ./speech_to_text_server
          pip install -r requirements.txt

      - name: 📦 Bundle Python script with PyInstaller
        run: |
          pyinstaller ./speech_to_text_server/speech-to-text-server.pyw `
          --noconfirm `
          --onedir `
          --console `
          --name "SpeechToText" `
          --distpath dist

      - name: 💾 Zip bundled STT folder
        shell: bash
        run: |
          mkdir -p dist/zipped
          7z a dist/zipped/bundled-STT-script.zip ./dist/SpeechToText

      - name: ⬆️ Upload bundled STT server zip
        uses: actions/upload-artifact@v4
        with:
          name: bundled-STT-script
          path: dist/zipped/bundled-STT-script.zip

  release:
    needs: [check-changelog, build, build-with-stt, bundle-python-script]
    runs-on: windows-latest
    steps:
      - name: ⬇️ Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          merge-multiple: true # <-- flattens all artifacts into ./artifacts

      - name: 🧪 Check downloaded artifacts
        shell: bash
        run: |
          echo "Contents of artifacts folder:"
          find artifacts -type f

      - name: 🗣️ Combine STT install package
        shell: bash
        run: |
          mkdir -p combined_stt_package/CustomQuickchat
          unzip ./artifacts/${{ env.PLUGIN_NAME }}-STT-partial.zip -d combined_stt_package
          unzip ./artifacts/bundled-STT-script.zip -d combined_stt_package/CustomQuickchat
          7z a artifacts/${{ env.PLUGIN_NAME }}-with-STT.zip ./combined_stt_package/*
          rm -rf ./artifacts/${{ env.PLUGIN_NAME }}-STT-partial.zip ./artifacts/bundled-STT-script.zip

      - name: 🚀 Create release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          body: |
            ## Install Steps
            1. Close Rocket League

            2. Click `CustomQuickchat.zip` or `CustomQuickchat-with-STT.zip` below to download it
                - `CustomQuickchat-with-STT.zip` has speech-to-text functionality, `CustomQuickchat.zip` does not

            3. Extract the `.zip` file and run `install.bat`
                <details> <summary>Getting an error when running <code>install.bat</code> ?</summary>
                    <ul><br>
                        <li>Drag/drop <code>CustomQuickchat.dll</code> into your bakkesmod plugins folder, usually located here:
                            <br><code>C:\Users\{YOUR USERNAME}\AppData\Roaming\bakkesmod\bakkesmod\plugins</code>
                        </li><br>
                        <li>If you're using the STT version, you'll also need to drag/drop the <code>SpeechToText</code> folder here:
                            <br><code>C:\Users\{YOUR USERNAME}\AppData\Roaming\bakkesmod\bakkesmod\data\CustomQuickchat</code>
                            <br><ul><br><li>You can create the <code>CustomQuickchat</code> folder if it doesn't exist</li></ul>
                        </li>
                    </ul>
                </details>

            ## Notes
            ${{ needs.check-changelog.outputs.changelog }}
          files: artifacts/*.zip

  post-to-discord:
    runs-on: windows-latest
    needs: release
    steps:
      - name: Post release info in discord channel 🤓
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
          nodetail: true
          title: "**${{ env.PLUGIN_NAME_FORMATTED }}** `${{ env.TAG_NAME }}` has been released! 💬🚀"
          description: |
            Click [here](${{ github.event.repository.html_url }}/releases/tag/${{ github.ref_name }}) to download!
          color: 0x00fff4
